// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication4.Data;

#nullable disable

namespace WebApplication4.Migrations
{
    [DbContext(typeof(dbboot))]
    [Migration("20240802163344_MigracionPrimera")]
    partial class MigracionPrimera
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication4.Models.Acarreo", b =>
                {
                    b.Property<int>("CarryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarryId"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfCarries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("HaulageSiteId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CarryId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HaulageSiteId");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Acarreos");
                });

            modelBuilder.Entity("WebApplication4.Models.Compañia", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Compañias");
                });

            modelBuilder.Entity("WebApplication4.Models.Historico", b =>
                {
                    b.Property<string>("Vehicle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfCarries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadPointName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnLoadPointName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Vehicle");

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("WebApplication4.Models.Material", b =>
                {
                    b.Property<int>("MaterialTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialTypeId");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("WebApplication4.Models.Operador", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaternalLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NoEmployee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaternalLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Operadores");
                });

            modelBuilder.Entity("WebApplication4.Models.ProgramacionDeRegistro", b =>
                {
                    b.Property<int>("CarryId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("DateOfCarries")
                        .HasColumnType("time");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("CarryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ProgramacionesDeRegistro");
                });

            modelBuilder.Entity("WebApplication4.Models.RegistroDeToken", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("access_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("refresh_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("RegistrosDeToken");
                });

            modelBuilder.Entity("WebApplication4.Models.Ruta", b =>
                {
                    b.Property<int>("HaulagePathId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HaulagePathId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Distance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExtraction")
                        .HasColumnType("bit");

                    b.Property<decimal>("LoadPointId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoadPointName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("TimeInHour")
                        .HasColumnType("time");

                    b.Property<decimal>("UnLoadPointId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnLoadPointName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HaulagePathId");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("WebApplication4.Models.Sitio", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaceId"));

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProduction")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PlaceLocation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlaceType")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PositionX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PositionY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PositionZ")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferencePoints")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlaceId");

                    b.ToTable("Sitios");
                });

            modelBuilder.Entity("WebApplication4.Models.Turno", b =>
                {
                    b.Property<int>("WorkShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkShiftId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enabled")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("WorkShiftId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("WebApplication4.Models.Vehiculo", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("EconomicNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EmptyWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FuelTankCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VehicleId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("WebApplication4.Models.Acarreo", b =>
                {
                    b.HasOne("WebApplication4.Models.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("HaulageSiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Operador");

                    b.Navigation("Ruta");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("WebApplication4.Models.Operador", b =>
                {
                    b.HasOne("WebApplication4.Models.Compañia", "Compañia")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compañia");
                });

            modelBuilder.Entity("WebApplication4.Models.ProgramacionDeRegistro", b =>
                {
                    b.HasOne("WebApplication4.Models.Acarreo", "Acarreo")
                        .WithMany("ProgramacionesDeRegistro")
                        .HasForeignKey("CarryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.RegistroDeToken", "RegistroDeToken")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Acarreo");

                    b.Navigation("RegistroDeToken");
                });

            modelBuilder.Entity("WebApplication4.Models.Ruta", b =>
                {
                    b.HasOne("WebApplication4.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("WebApplication4.Models.Vehiculo", b =>
                {
                    b.HasOne("WebApplication4.Models.Compañia", "Compañia")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compañia");
                });

            modelBuilder.Entity("WebApplication4.Models.Acarreo", b =>
                {
                    b.Navigation("ProgramacionesDeRegistro");
                });
#pragma warning restore 612, 618
        }
    }
}
