// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication4.Data;

#nullable disable

namespace WebApplication4.Migrations
{
    [DbContext(typeof(dbboot))]
    [Migration("20240726142329_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication4.Models.Acarreo", b =>
                {
                    b.Property<int>("AcarreoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcarreoID"));

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialID")
                        .HasColumnType("int");

                    b.Property<int>("OperadorID")
                        .HasColumnType("int");

                    b.Property<int>("RutaID")
                        .HasColumnType("int");

                    b.Property<decimal>("Toneladas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehiculoID")
                        .HasColumnType("int");

                    b.HasKey("AcarreoID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("OperadorID");

                    b.HasIndex("RutaID");

                    b.HasIndex("VehiculoID");

                    b.ToTable("Acarreos");
                });

            modelBuilder.Entity("WebApplication4.Models.Compañia", b =>
                {
                    b.Property<int>("CompañiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompañiaID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompañiaID");

                    b.ToTable("Compañias");
                });

            modelBuilder.Entity("WebApplication4.Models.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_de_acarreos")
                        .HasColumnType("datetime2");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sitio_de_carga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sitio_de_descarga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Toneladas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("WebApplication4.Models.Material", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialID");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("WebApplication4.Models.Operador", b =>
                {
                    b.Property<int>("OperadorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperadorID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompañiaID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TurnoID")
                        .HasColumnType("int");

                    b.HasKey("OperadorID");

                    b.HasIndex("CompañiaID");

                    b.HasIndex("TurnoID");

                    b.ToTable("Operadores");
                });

            modelBuilder.Entity("WebApplication4.Models.ProgramacionDeRegistro", b =>
                {
                    b.Property<int>("AcarreoID")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Hora_de_registro")
                        .HasColumnType("time");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("AcarreoID");

                    b.HasIndex("UserID");

                    b.ToTable("ProgramacionesDeRegistro");
                });

            modelBuilder.Entity("WebApplication4.Models.RegistroDeToken", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("access_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("refresh_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("RegistrosDeToken");
                });

            modelBuilder.Entity("WebApplication4.Models.Ruta", b =>
                {
                    b.Property<int>("RutaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RutaID"));

                    b.Property<decimal>("Distancia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaterialID")
                        .HasColumnType("int");

                    b.Property<string>("Sito_De_Carga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sito_De_Descarga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("Tiempo_De_Ciclo")
                        .HasColumnType("time");

                    b.Property<string>("Tipo_De_Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RutaID");

                    b.HasIndex("MaterialID");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("WebApplication4.Models.Turno", b =>
                {
                    b.Property<int>("TurnoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnoID"));

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TurnoID");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("WebApplication4.Models.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiculoID"));

                    b.Property<decimal>("Capacidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompañiaID")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_economico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_de_vehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehiculoID");

                    b.HasIndex("CompañiaID");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("WebApplication4.Models.Acarreo", b =>
                {
                    b.HasOne("WebApplication4.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("OperadorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Operador");

                    b.Navigation("Ruta");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("WebApplication4.Models.Operador", b =>
                {
                    b.HasOne("WebApplication4.Models.Compañia", "Compañia")
                        .WithMany()
                        .HasForeignKey("CompañiaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("TurnoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compañia");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("WebApplication4.Models.ProgramacionDeRegistro", b =>
                {
                    b.HasOne("WebApplication4.Models.Acarreo", "Acarreo")
                        .WithMany()
                        .HasForeignKey("AcarreoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.RegistroDeToken", "RegistroDeToken")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Acarreo");

                    b.Navigation("RegistroDeToken");
                });

            modelBuilder.Entity("WebApplication4.Models.Ruta", b =>
                {
                    b.HasOne("WebApplication4.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("WebApplication4.Models.Vehiculo", b =>
                {
                    b.HasOne("WebApplication4.Models.Compañia", "Compañia")
                        .WithMany()
                        .HasForeignKey("CompañiaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compañia");
                });
#pragma warning restore 612, 618
        }
    }
}
